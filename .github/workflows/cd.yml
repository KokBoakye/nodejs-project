name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"] # Replace with the name of your CI workflow
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only run if CI succeeded
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # for OIDC auth if needed
      packages: write
      actions: read

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: nodejs
      IMAGE_TAG: latest # or commit SHA for immutable tagging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull Docker image from ECR
        run: |
          echo "Pulling image..."
          docker pull ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Run Docker container
        run: |
          docker run -d \
            --name nodejs-app \
            -p 8080:8080 \
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Verify container is running
        run: |
          docker ps | grep nodejs-app
